[["05-analysisR.html", "A Research Design &amp; Analysis in R A.1 Environment Setup A.2 Variable Calculations A.3 Statistical Mapping A.4 Design Tips", " A Research Design &amp; Analysis in R A.1 Environment Setup First, let’s import the library needed for our analysis. ‘sf’ ‘tmap’ library(sf) library(tmap) Let’s also bring in our data, cleaned from the previous module. In this case, we’ll read from saved files and load in. A.2 Variable Calculations A.2.1 Buffers Activity: Farmers Markets in Chicago This activity focuses on utilizing data from Chicago’s farmers’ markets, specifically the ’farmers_markets_2012’dataset. Farmers’ markets are vital for health and well-being, providing access to fresh, locally-grown produce and supporting sustainable food systems. They offer diverse, nutritious food options, often at affordable prices, and foster community connections and local agriculture support. The presence and density of farmers’ markets in a neighborhood significantly influence residents’ food accessibility. A.2.1.1 Add Dataset First, read in and inspect the CSV file. markets &lt;- read.csv() head(markets) Next, convert the data frame to a spatial object using. markets.sf &lt;- read.csv() head(markets.sf) tm_shape(Chi_Zips) + tm_borders(alpha=0.5) + tm_shape(markets.sf) + tm_dots(size=0.5) A.2.1.2 Spatial Reference System markets.3435 &lt;- st_transform(markets.sf, 3435) A.2.1.3 Create Buffers markets.buffer &lt;- st_buffer(markets.3435, 2640) tm_shape(Chi_Zips) + tm_borders(alpha=0.5) + tm_stm_shape(markets.buffer) + tm_polyons(alpha = 0.6) A.2.1.4 Dissolve Buffers A.2.1.5 Visualize A.2.2 Distance Metrics A.3 Statistical Mapping A.3.1 Choropleth Maps A.3.2 Cartograms install.packages(“cartogram”) library(cartogram) https://cran.r-project.org/web/packages/cartogram/readme/README.html non-overlapping Circles Cartogram (Dorling el al. 1996) test &lt;- cartogram_dorling(Chi_Zipsf.3435, “TotHousing”) &gt; tm_shape(Chi_Zipsf.3435) + tm_polygons() + tm_shape(test) + tm_polygons(“TotHousing”) test &lt;- cartogram_dorling(Chi_Zipsf.3435, “TotHousing”, k = 3) &gt; tm_shape(Chi_Zipsf.3435) + tm_polygons() + tm_shape(test) + tm_polygons(“TotHousing”) test &lt;- cartogram_dorling(Chi_Zipsf.3435, “TotHousing”, k = 9) &gt; tm_shape(Chi_Zipsf.3435) + tm_polygons() + tm_shape(test) + tm_polygons(“TotHousing”) test &lt;- cartogram_dorling(Chi_Zipsf.3435, “TotHousing”, k = 2) &gt; tm_shape(Chi_Zipsf.3435) + tm_polygons() + tm_shape(test) + tm_polygons(“TotHousing”) rubber sheet distortion algorithm (Dougenik et al. 1985) test &lt;- cartogram_ncont(Chi_Zipsf.3435, “TotHousing”) tm_shape(Chi_Zipsf.3435) + tm_polygons() + tm_shape(test) + tm_polygons(“TotHousing”) A.4 Design Tips A.4.1 ColorBrewer A.4.2 Cartograms "]]
