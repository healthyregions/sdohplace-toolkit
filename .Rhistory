render_book()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
setwd("~/Code/sdhoplace-toolkit")
install.packages("readxl")
library("readxl")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(sf)
library(tmap)
markets <- st_read("data/farmers_markets_2012.shp")
head(markets)
tmap_mode("view")
tm_basemap("CartoDB.Voyager") +
tm_shape(markets.sf) + tm_dots(size=0.5)
tmap_mode("view")
tm_basemap("CartoDB.Voyager") +
tm_shape(markets) + tm_dots(size=0.5)
tmap_mode("view")
tm_basemap("CartoDB.Voyager") +
tm_shape(markets) + tm_dots(size=0.01)
markets.buffer <- st_buffer(markets, 2640)
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_stm_shape(markets.buffer) + tm_polyons(alpha = 0.6)
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_polyons(alpha = 0.6)
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_polyon(alpha = 0.6)
markets.buffer <- st_buffer(markets, 2640)
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_polyon(alpha = 0.6)
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tm_basemap("CartoDB.Voyager") +
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
st_write(Chi_Zipsf.3435, "data/chizips.geojson")
zips <- st_read("data/chizips.geojson")
tmap_mode("plot")
tm_shape(zips) + tm_polygons(alpha=0.5) +
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) +
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets) + tm_dots(alpha=0.5) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets) + tm_dots(size = 0.1) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets) + tm_dots(size = 0.05) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_shape(markets.buffer) + tm_borders(alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.6)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.6)+
tm_shape(markets) + tm_dots(size = 0.03) +
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.6) +
tm_shape(markets) + tm_dots(size = 0.03) +
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.6) +
tm_shape(markets) + tm_dots(size = 0.03)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.8) +
tm_shape(markets) + tm_dots(size = 0.03)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.2) +
tm_shape(markets) + tm_dots(size = 0.03)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.3) +
tm_shape(markets) + tm_dots(size = 0.03)
tmap_mode("plot")
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(markets) + tm_dots(size = 0.03)
markets.buffer1 <- st_buffer(markets, 5280)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(markets.buffer1) + tm_fill(col = "turquoise4", alpha = 0.4) +
tm_shape(markets.buffer) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(markets) + tm_dots(size = 0.03)
buffer.union <- st_union(markets.buffer)
buffer.union1 <- st_union(markets.buffer1)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(buffer.union1) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(buffer.union) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(markets) + tm_dots(size = 0.03)
buffer.union <- st_union(markets.buffer)
buffer.union1 <- st_union(markets.buffer1)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(buffer.union1) + tm_fill(col = "turquoise4", alpha = 0.4) +
tm_shape(buffer.union) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(markets) + tm_dots(size = 0.03)
buffer.union <- st_union(markets.buffer)
buffer.union1 <- st_union(markets.buffer1)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(buffer.union1) + tm_polygons(col = "turquoise4", alpha = 0.4) +
tm_shape(buffer.union) + tm_fill(col = "turquoise1", alpha = 0.4) +
tm_shape(markets) + tm_dots(size = 0.03)
library(sf)
library(tmap)
zipCentroid <- st_centroid(zips)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(zipCentroid) + tm_dots(col = "red", size = 0.03)
tm_shape(zips) + tm_borders(alpha=0.3) + tm_fill(col="gray90") +
tm_shape(zipCentroid) + tm_dots(col = "violetred1", size = 0.03)
st_crs(zipCentroid)
st_crs(markets)
nearestMarket_indexe <- st_nearest_feature(zipCentroid, markets)
head(nearestMarket_indexe)
nearestMarket <- zipCentroid[nearestMarket_indexe,]
head(nearestMarket)
minDist <- st_distance(zipCentroid, nearestMarket, by_element = TRUE)
minDist
library(units)
minDist_mi <- set_units(minDist, "mi")
minDist_mi
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', n=5,
title = "Minimum Distance (mi)") +
tm_layout(main.title = "Minimum Distance from Zip Centroid\n to Methadone Clinic",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', n=5,
title = "Minimum Distance (mi)") +
tm_layout(main.title = "Min Distance from Zip /n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', n=5,
title = "Minimum Distance (mi)") +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
nearestMarket <- zipCentroid[nearestMarket_indexe,]
head(nearestMarket)
minDist <- st_distance(zipCentroid, nearestMarket, by_element = TRUE)
minDist
library(units)
minDist_mi <- set_units(minDist, "mi")
minDist_mi
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "-Greens", n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
nearestMarket_indexe <- st_nearest_feature(zipCentroid, markets)
head(nearestMarket_indexe)
dim(nearestMarket_indexe)
str(nearestMarket_indexe)
str(zipCentroid)
str(nearestMarket_indexe)
nearestMarket_indexe <- st_nearest_points(zipCentroid, markets)
str(nearestMarket_indexe)
nearestMarket_indexe <- st_nearest_feature(zipCentroid, markets)
str(nearestMarket_indexe)
nearestMarket <- zipCentroid[nearestMarket_indexe,]
head(nearestMarket)
minDist <- st_distance(zipCentroid, nearestMarket, by_element = TRUE)
minDist
library(units)
minDist_mi <- set_units(minDist, "mi")
minDist_mi
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "-Greens", n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
st_crs(zipCentroid)
st_crs(markets)
nearestMarket_indexe <- st_nearest_feature(zipCentroid, markets)
nearestMarket_indexe <- st_nearest_points(zipCentroid, markets)
plot(nearestMarket_indexe)
nearestMarket_indexe <- (st_nearest_points(zipCentroid, markets))/100
plot(nearestMarket_indexe)
nearestMarket_indexe <- (st_nearest_points(zipCentroid, markets))/10000
plot(nearestMarket_indexe)
First, we'll develop an index that identifies which market is nearest to the zip code centroid using the `st_nearest_feature` function. It will return the index of the object that is nearest, so we will subset the resources by the index to get the nearest object.
```{r }
nearestMarket_indexe <- st_nearest_feature(zipCentroid, markets)
str(nearestMarket_indexe)
nearestMarket <- zipCentroid[nearestMarket_indexe,]
head(nearestMarket)
nearestMarket <- markets[nearestMarket_indexe,]
head(nearestMarket)
minDist <- st_distance(zipCentroid, nearestMarket, by_element = TRUE)
head(minDist)
#install.packages("units")
library(units)
minDist_mi <- set_units(minDist, "mi")
head(minDist_mi)
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
zips_final <- cbind(zips, minDist_mi)
head(zips_final)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "-Greens", n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "Greens", n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "GnBu", n=5,
title = "Minimum Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "GnBu", n=5,
title = "Min.Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Min. Distance from Zip \n to Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "GnBu", n=5,
title = "Min.Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Distance (mi) from Zip \n to Nearest Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("minDist_mi", style = 'quantile', palette = "GnBu", n=5,
title = "Min.Distance (mi)") +
tm_shape(markets) + tm_dots(size = 0.03) +
tm_layout(main.title = "Distance from Zip Centroid \n to Nearest Farmers Market",
main.title.position = "center",
main.title.size = 1)
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative", style="quantile", pal="BuPu",
title = "COVID Case Rate")
tm_shape(zipsMerged) +
tm_fill("Case.Rate...Cumulative", style="quantile", n=6, pal="-RdYlGn",
title = "COVID Case Rate",alpha = 0.8) +
tm_borders(lwd = 0) +
tm_layout(main.title = "Walkable Methadone Service Areas",
main.title.position = "center",
main.title.size = 1,
frame = FALSE)
tm_shape(zips_final) +
tm_fill("Case.Rate...Cumulative", style="quantile", n=6, pal="-RdYlGn",
title = "COVID Case Rate",alpha = 0.8) +
tm_borders(lwd = 0) +
tm_layout(main.title = "Walkable Methadone Service Areas",
main.title.position = "center",
main.title.size = 1,
frame = FALSE)
View(Chi_Zipsf)
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative", style="quantile", pal="BuPu",
title = "COVID Case Rate", histogram.legend = TRUE)
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative", style="quantile", pal="BuPu",
title = "COVID Case Rate", histogram.legend = TRUE)
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative",
style="quantile", pal="BuPu",
legend.hist=T, n=4,
title = "COVID Case Rate", ) +
tm_scale_bar(position = "left") +
tm_layout(legend.outside = TRUE, legend.outside.position = "right")
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative",
style="jenks", pal="BuPu",
legend.hist=T, n=4,
title = "COVID Case Rate", ) +
tm_scale_bar(position = "left") +
tm_layout(legend.outside = TRUE, legend.outside.position = "right")
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative",
style="sd", pal="BuPu",
legend.hist=T, n=4,
title = "COVID Case Rate", ) +
tm_scale_bar(position = "left") +
tm_layout(legend.outside = TRUE, legend.outside.position = "right")
tm_shape(zips_final) +
tm_polygons("Case.Rate...Cumulative",
style="quantile", pal="BuPu",
legend.hist=T, n=6,
title = "COVID Case Rate", ) +
tm_scale_bar(position = "left") +
tm_layout(legend.outside = TRUE, legend.outside.position = "right")
COVID <- tm_shape(zips_final) + tm_fill("Case.Rate...Cumulative",
style="jenks", pal="Reds", n=4, title = "COVID Rt")
Senior <- tm_shape(zips_final) + tm_fill("ovr65P",
style="jenks", pal="BuPu", n=4)
NoHS <- tm_shape(zips_final) + tm_fill("noHSP",
style="jenks", pal="BuPu", n=4)
BlkP <- tm_shape(zips_final) + tm_fill("blackP",
style="jenks", pal="BuPu", n=4)
Latnx <- tm_shape(zips_final) + tm_fill("hispP",
style="jenks", pal="BuPu", n=4)
WhiP <- tm_shape(zips_final) + tm_fill("whiteP",
style="jenks", pal="BuPu", n=4)
tmap_arrange(COVID, Senior, NoHS, BlkP, Latnx, WhiP)
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative")
#install.packages("cartogram")
library(cartogram)
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative")
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("TotHousing")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", , k = 3)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("TotHousing")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 9)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("TotHousing")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 1)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("TotHousing")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 1)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 3)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 3)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative") +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 3)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative",
style="sd", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
carto.Dorling <- cartogram_dorling(zips_final, "Case.Rate...Cumulative", k = 2)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative",
style="sd", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
carto.distort <- cartogram_ncont(zips_final, "Case.Rate...Cumulative", k = 2)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.distort) + tm_polygons("Case.Rate...Cumulative",
style="sd", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
carto.distort <- cartogram_ncont(zips_final, "Case.Rate...Cumulative", k = 1)
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.distort) + tm_polygons("Case.Rate...Cumulative",
style="sd", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.Dorling) + tm_polygons("Case.Rate...Cumulative",
style="jenks", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
tm_shape(zips_final) + tm_polygons() +
tm_shape(carto.distort) + tm_polygons("Case.Rate...Cumulative",
style="jenks", pal="BuPu", legend.hist=T, n=4,) +
tm_layout(legend.outside = TRUE, frame = FALSE, legend.outside.position = "right")
tmap_arrange(COVID, Senior, NoHS, BlkP, Latnx, WhiP)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install('sf')
install.packages('sf')
bookdown.render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
library.install('bookdown')
library.install_package('bookdown')
install.packages('bookdown')
bookdown::render_book(".")
bookdown::render_book(".")
install.packages('pander')
bookdown::render_book(".")
install.packages('tmap')
install.packages('stars')
install.packages('raster')
install.packages('stars')
install.packages('tmap')
install.packages('lwgeom')
install.packages('stars')
install.packages('terra')
install.packages('stars')
install.packages('abind')
install.packages('sf')
install.packages("sf")
install.packages('stars')
install.packages('tmap')
install.packages('dplyr')
bookdown::render_book(".")
install.packages('cartogram')
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
bookdown::render_book('.')
exit
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')
bookdown::render_book("index.Rmd")
